( Copyright Â© 2022 Sam Blenny)
( SPDX-License-Identifier: MIT)

: 2d drop drop ;
: 4d 2d 2d ;
: t01 4 for{ r 1 and }for .S ;      t01   (  0 1 0 1  OK)
4d
: t02 true  if{ 4 .S ; }if 5 .S ;   t02         (  4  OK)
drop
: t03 false if{ 4 .S ; }if 5 .S ;   t03         (  5  OK)
drop
.S                                 (  Stack is empty  OK)
23 const t04 .S                    (  Stack is empty  OK)
var t05 5 t05 ! .S                 (  Stack is empty  OK)
0 opcode nop .S                    (  Stack is empty  OK)
"   t06: a string" print            (  t06: a string  OK)
: t07 "   another one" print ; t07     (  another one OK)
" foo" const t08  " foo" t08 strcmp .           ( -1  OK)
" bar" const t09  t08 t09 strcmp .               ( 0  OK)
: foo? t08 here word strcmp . ;  foo? foo       ( -1  OK)
( t11: Malformed if-block)
: t11 ( missing T=addr from if{ )  }if ;        (  ERR 2)
( fake if{ addr: ) 9000
: t11 ( pops fake addr->) }if ;                (  ERR 12)
nop                                                (  OK)
( t12: Compiling/OK prompts during compile)
: t12 true if{                              (  Compiling)
    ;                                       (  Compiling)
  }if                                       (  Compiling)
;                                                  (  OK)
( t15: Attempted infinitely tail-recursive call)
: t15 t15 ;  t15                                (  ERR 8)
nop                                                (  OK)
( t16: Attempted infinitely recursive regular call)
: t16 t16 nop ;  t16                            (  ERR 6)
nop                                                (  OK)
( t17: Attempt to overflow the return stack.    )
(      The juggling of return values is to avoid)
(      git diffs for compiled addresses that can)
(      change each time I modify the kernel code)
: t17  ( n -- )
  dup r >a rdrop r >b rdrop cr   ( pop addresses)
  ( n) for{ r .Rh >r cr }for                  ( )
  ( n) for{ r rdrop rdrop .Rh >r cr }for      ( )
  b >r a >r                  ( restore addresses)
;
( 16 items is too much)
16 t17
( 15 items is okay)
15 t17
( Test extra whtespace for : )
:  t18 nop ;  ' t18 swap drop .                 ( -1  OK)
