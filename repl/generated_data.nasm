; Copyright (c) 2022 Sam Blenny
; SPDX-License-Identifier: MIT
;
; ========================================================================
; === CAUTION! This file is automatically generated. Do not edit here. ===
; ========================================================================

;----------------------------
; VM Instruction token values

%define tReturn       0
%define tNop          1
%define tBye          2
%define tDup          3
%define tDrop         4
%define tSwap         5
%define tOver         6
%define tClearStack   7
%define tDotS         8
%define tDotQuoteI    9
%define tParen       10
%define tColon       11
%define tEmit        12
%define tCR          13
%define tSpace       14
%define tDot         15
%define tPlus        16
%define tMinus       17
%define tMul         18
%define tDiv         19
%define tMod         20
%define tDivMod      21
%define tMax         22
%define tMin         23
%define tAbs         24
%define tAnd         25
%define tOr          26
%define tXor         27
%define tInvert      28
%define tLess        29
%define tGreater     30
%define tEqual       31
%define tZeroLess    32
%define tZeroEqual   33
%define tHex         34
%define tDecimal     35
%define tFetch       36
%define tStore       37
%define tByteFetch   38
%define tByteStore   39
%define tSemiColon   40
%define tDotQuoteC   41
%define tU8          42
%define tU16         43
%define tI8          44
%define tI16         45
%define tI32         46
%define tJump        47
%define tCall        48
%define tClearReturn  49
%define tNext        50
%define tNegate      51
%define tToR         52
%define tRFrom       53
%define tI           54
%define tDotRet      55


;------------------------------------------------------------------------
; Jump table (list of dword code label addresses, indexed by token value)

align 16, db 0
db "== Jump Table =="

align 16, db 0
JumpTable:
dd mReturn      ;  0
dd mNop         ;  1
dd mBye         ;  2
dd mDup         ;  3
dd mDrop        ;  4
dd mSwap        ;  5
dd mOver        ;  6
dd mClearStack  ;  7
dd mDotS        ;  8
dd mDotQuoteI   ;  9
dd mParen       ; 10
dd mColon       ; 11
dd mEmit        ; 12
dd mCR          ; 13
dd mSpace       ; 14
dd mDot         ; 15
dd mPlus        ; 16
dd mMinus       ; 17
dd mMul         ; 18
dd mDiv         ; 19
dd mMod         ; 20
dd mDivMod      ; 21
dd mMax         ; 22
dd mMin         ; 23
dd mAbs         ; 24
dd mAnd         ; 25
dd mOr          ; 26
dd mXor         ; 27
dd mInvert      ; 28
dd mLess        ; 29
dd mGreater     ; 30
dd mEqual       ; 31
dd mZeroLess    ; 32
dd mZeroEqual   ; 33
dd mHex         ; 34
dd mDecimal     ; 35
dd mFetch       ; 36
dd mStore       ; 37
dd mByteFetch   ; 38
dd mByteStore   ; 39
dd mSemiColon   ; 40
dd mDotQuoteC   ; 41
dd mU8          ; 42
dd mU16         ; 43
dd mI8          ; 44
dd mI16         ; 45
dd mI32         ; 46
dd mJump        ; 47
dd mCall        ; 48
dd mClearReturn  ; 49
dd mNext        ; 50
dd mNegate      ; 51
dd mToR         ; 52
dd mRFrom       ; 53
dd mI           ; 54
dd mDotRet      ; 55

%define JumpTableLen 56


;-------------------------------------------------------------
; Core vocabulary linked lists
;
; Vocabulary linked list format:
;  dw link to previous item (zero indexed, *not* section indexed)
;  db length of name, <name-bytes>, token
;
; Voc0 is meant to be copied at runtime into the core dictionary
; area of markabForth's 64KB virtual RAM memory map
;
align 16, db 0
db "== Dictionary =="

align 16, db 0
Voc0: dd 0         ; This padding is so second item's link will be non-zero
align 16, db 0
dw 0
db 3, "nop", 0, tNop, tReturn
dw 16
db 3, "bye", 0, tBye, tReturn
dw 25
db 3, "dup", 0, tDup, tReturn
dw 34
db 4, "drop", 0, tDrop, tReturn
dw 43
db 4, "swap", 0, tSwap, tReturn
dw 53
db 4, "over", 0, tOver, tReturn
dw 63
db 10, "clearstack", 0, tClearStack, tReturn
dw 73
db 2, ".s", 0, tDotS, tReturn
dw 89
db 2, '."', 0, tDotQuoteI, tReturn
dw 97
db 1, "(", 0, tParen, tReturn
dw 105
db 1, ":", 0, tColon, tReturn
dw 112
db 4, "emit", 0, tEmit, tReturn
dw 119
db 2, "cr", 0, tCR, tReturn
dw 129
db 5, "space", 0, tSpace, tReturn
dw 137
db 1, ".", 0, tDot, tReturn
dw 148
db 1, "+", 0, tPlus, tReturn
dw 155
db 1, "-", 0, tMinus, tReturn
dw 162
db 6, "negate", 0, tNegate, tReturn
dw 169
db 1, "*", 0, tMul, tReturn
dw 181
db 1, "/", 0, tDiv, tReturn
dw 188
db 3, "mod", 0, tMod, tReturn
dw 195
db 4, "/mod", 0, tDivMod, tReturn
dw 204
db 3, "max", 0, tMax, tReturn
dw 214
db 3, "min", 0, tMin, tReturn
dw 223
db 3, "abs", 0, tAbs, tReturn
dw 232
db 3, "and", 0, tAnd, tReturn
dw 241
db 2, "or", 0, tOr, tReturn
dw 250
db 3, "xor", 0, tXor, tReturn
dw 258
db 6, "invert", 0, tInvert, tReturn
dw 267
db 1, "<", 0, tLess, tReturn
dw 279
db 1, ">", 0, tGreater, tReturn
dw 286
db 1, "=", 0, tEqual, tReturn
dw 293
db 2, "0<", 0, tZeroLess, tReturn
dw 300
db 2, "0=", 0, tZeroEqual, tReturn
dw 308
db 3, "hex", 0, tHex, tReturn
dw 316
db 7, "decimal", 0, tDecimal, tReturn
dw 325
db 1, "@", 0, tFetch, tReturn
dw 338
db 1, "!", 0, tStore, tReturn
dw 345
db 2, "b@", 0, tByteFetch, tReturn
dw 352
db 2, "b!", 0, tByteStore, tReturn
dw 360
db 1, ";", 0, tSemiColon, tReturn
dw 368
db 4, "next", 0, tNext, tReturn
dw 375
db 2, ">r", 0, tToR, tReturn
dw 385
db 2, "r>", 0, tRFrom, tReturn
dw 393
db 1, "i", 0, tI, tReturn
dw 401
db 4, ".ret", 0, tDotRet, tReturn
Voc0End: db 0
align 16, db 0
Voc0Len: dd Voc0End - Voc0  ; 418
Voc0Head: dd 408
