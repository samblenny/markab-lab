; Copyright (c) 2022 Sam Blenny
; SPDX-License-Identifier: MIT
;
; ========================================================================
; === CAUTION! This file is automatically generated. Do not edit here. ===
; ========================================================================

;----------------------------
; VM Instruction token values

%define tReturn       0
%define tNop          1
%define tBye          2
%define tDup          3
%define tDrop         4
%define tSwap         5
%define tOver         6
%define tClearStack   7
%define tDotS         8
%define tDotQuoteI    9
%define tParen       10
%define tColon       11
%define tEmit        12
%define tCR          13
%define tSpace       14
%define tDot         15
%define tPlus        16
%define tMinus       17
%define tMul         18
%define tDiv         19
%define tMod         20
%define tDivMod      21
%define tMax         22
%define tMin         23
%define tAbs         24
%define tAnd         25
%define tOr          26
%define tXor         27
%define tInvert      28
%define tLess        29
%define tGreater     30
%define tEqual       31
%define tZeroLess    32
%define tZeroEqual   33
%define tHex         34
%define tDecimal     35
%define tFetch       36
%define tStore       37
%define tByteFetch   38
%define tByteStore   39
%define tSemiColon   40
%define tDotQuoteC   41
%define tU8          42
%define tU16         43
%define tI8          44
%define tI16         45
%define tI32         46
%define tJump        47
%define tCall        48
%define tClearReturn  49
%define tNext        50
%define tNegate      51
%define tToR         52
%define tRFrom       53
%define tI           54
%define tDotRet      55
%define tClearReturn  56
%define tWordStore   57
%define tWordFetch   58
%define tDumpVars    59
%define tTick        60
%define tVariable    61
%define tConstant    62
%define tAllot       63
%define tComma       64
%define tHere        65
%define tQuestion    66
%define tOnePlus     67
%define tTwoPlus     68
%define tFourPlus    69


;------------------------------------------------------------------------
; Jump table (list of dword code label addresses, indexed by token value)

align 16, db 0
db "== Jump Table =="

align 16, db 0
JumpTable:
dd mReturn      ;  0
dd mNop         ;  1
dd mBye         ;  2
dd mDup         ;  3
dd mDrop        ;  4
dd mSwap        ;  5
dd mOver        ;  6
dd mClearStack  ;  7
dd mDotS        ;  8
dd mDotQuoteI   ;  9
dd mParen       ; 10
dd mColon       ; 11
dd mEmit        ; 12
dd mCR          ; 13
dd mSpace       ; 14
dd mDot         ; 15
dd mPlus        ; 16
dd mMinus       ; 17
dd mMul         ; 18
dd mDiv         ; 19
dd mMod         ; 20
dd mDivMod      ; 21
dd mMax         ; 22
dd mMin         ; 23
dd mAbs         ; 24
dd mAnd         ; 25
dd mOr          ; 26
dd mXor         ; 27
dd mInvert      ; 28
dd mLess        ; 29
dd mGreater     ; 30
dd mEqual       ; 31
dd mZeroLess    ; 32
dd mZeroEqual   ; 33
dd mHex         ; 34
dd mDecimal     ; 35
dd mFetch       ; 36
dd mStore       ; 37
dd mByteFetch   ; 38
dd mByteStore   ; 39
dd mSemiColon   ; 40
dd mDotQuoteC   ; 41
dd mU8          ; 42
dd mU16         ; 43
dd mI8          ; 44
dd mI16         ; 45
dd mI32         ; 46
dd mJump        ; 47
dd mCall        ; 48
dd mClearReturn  ; 49
dd mNext        ; 50
dd mNegate      ; 51
dd mToR         ; 52
dd mRFrom       ; 53
dd mI           ; 54
dd mDotRet      ; 55
dd mClearReturn  ; 56
dd mWordStore   ; 57
dd mWordFetch   ; 58
dd mDumpVars    ; 59
dd mTick        ; 60
dd mVariable    ; 61
dd mConstant    ; 62
dd mAllot       ; 63
dd mComma       ; 64
dd mHere        ; 65
dd mQuestion    ; 66
dd mOnePlus     ; 67
dd mTwoPlus     ; 68
dd mFourPlus    ; 69

%define JumpTableLen 70


;-------------------------------------------------------------
; Core vocabulary linked lists
;
; Vocabulary linked list format:
;  dw link to previous item (zero indexed, *not* section indexed)
;  db length of name, <name-bytes>, token
;
; Voc0 is meant to be copied at runtime into the core dictionary
; area of markabForth's 64KB virtual RAM memory map
;

%define ParamToken 0
%define ParamCode  1
%define ParamConst 2
%define ParamVar   3

align 16, db 0
db "== Dictionary =="

align 16, db 0
Voc0: dd 0         ; This padding is so second item's link will be non-zero
align 16, db 0
dw 0
db 3, "nop", ParamToken, tNop, 0
dw 16
db 3, "bye", ParamToken, tBye, 0
dw 25
db 3, "dup", ParamToken, tDup, 0
dw 34
db 4, "drop", ParamToken, tDrop, 0
dw 43
db 4, "swap", ParamToken, tSwap, 0
dw 53
db 4, "over", ParamToken, tOver, 0
dw 63
db 10, "clearstack", ParamToken, tClearStack, 0
dw 73
db 2, ".s", ParamToken, tDotS, 0
dw 89
db 1, "(", ParamToken, tParen, -1
dw 97
db 2, '."', ParamToken, tDotQuoteI, -1
dw 104
db 1, ":", ParamToken, tColon, -1
dw 112
db 1, ";", ParamToken, tSemiColon, -1
dw 119
db 1, "'", ParamToken, tTick, -1
dw 126
db 4, "emit", ParamToken, tEmit, 0
dw 133
db 2, "cr", ParamToken, tCR, 0
dw 143
db 5, "space", ParamToken, tSpace, 0
dw 151
db 1, ".", ParamToken, tDot, 0
dw 162
db 1, "+", ParamToken, tPlus, 0
dw 169
db 1, "-", ParamToken, tMinus, 0
dw 176
db 6, "negate", ParamToken, tNegate, 0
dw 183
db 1, "*", ParamToken, tMul, 0
dw 195
db 1, "/", ParamToken, tDiv, 0
dw 202
db 3, "mod", ParamToken, tMod, 0
dw 209
db 4, "/mod", ParamToken, tDivMod, 0
dw 218
db 3, "max", ParamToken, tMax, 0
dw 228
db 3, "min", ParamToken, tMin, 0
dw 237
db 3, "abs", ParamToken, tAbs, 0
dw 246
db 2, "1+", ParamToken, tOnePlus, 0
dw 255
db 2, "2+", ParamToken, tTwoPlus, 0
dw 263
db 2, "4+", ParamToken, tFourPlus, 0
dw 271
db 3, "and", ParamToken, tAnd, 0
dw 279
db 2, "or", ParamToken, tOr, 0
dw 288
db 3, "xor", ParamToken, tXor, 0
dw 296
db 6, "invert", ParamToken, tInvert, 0
dw 305
db 1, "<", ParamToken, tLess, 0
dw 317
db 1, ">", ParamToken, tGreater, 0
dw 324
db 1, "=", ParamToken, tEqual, 0
dw 331
db 2, "0<", ParamToken, tZeroLess, 0
dw 338
db 2, "0=", ParamToken, tZeroEqual, 0
dw 346
db 3, "hex", ParamToken, tHex, 0
dw 354
db 7, "decimal", ParamToken, tDecimal, 0
dw 363
db 1, "@", ParamToken, tFetch, 0
dw 376
db 1, "!", ParamToken, tStore, 0
dw 383
db 2, "b@", ParamToken, tByteFetch, 0
dw 390
db 2, "b!", ParamToken, tByteStore, 0
dw 398
db 2, "w@", ParamToken, tWordFetch, 0
dw 406
db 2, "w!", ParamToken, tWordStore, 0
dw 414
db 4, "next", ParamToken, tNext, 0
dw 422
db 2, ">r", ParamToken, tToR, 0
dw 432
db 2, "r>", ParamToken, tRFrom, 0
dw 440
db 1, "i", ParamToken, tI, 0
dw 448
db 4, ".ret", ParamToken, tDotRet, 0
dw 455
db 11, "clearreturn", ParamToken, tClearReturn, 0
dw 465
db 5, ".vars", ParamToken, tDumpVars, 0
dw 482
db 8, "variable", ParamToken, tVariable, 0
dw 493
db 8, "constant", ParamToken, tConstant, 0
dw 507
db 5, "allot", ParamToken, tAllot, 0
dw 521
db 1, ",", ParamToken, tComma, 0
dw 532
db 4, "here", ParamToken, tHere, 0
dw 539
db 1, "?", ParamToken, tQuestion, 0
Voc0End: db 0
align 16, db 0
Voc0Len: dd Voc0End - Voc0  ; 556
Voc0Head: dd 549
