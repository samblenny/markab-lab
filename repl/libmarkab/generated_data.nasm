; Copyright (c) 2022 Sam Blenny
; SPDX-License-Identifier: MIT
;
; ========================================================================
; === CAUTION! This file is automatically generated. Do not edit here. ===
; ========================================================================
;

; The libmarkab/ prefix on these include paths is because they get resolved
; relative to the working directory of make when it is running ../Makefile.
%include "libmarkab/common_macros.nasm"
%include "libmarkab/generated_macros.nasm"

global JumpTable
global JumpTableLen
global Voc0End
global Voc0Len
global Voc0Head


;------------------------------------------------------------------------
; Jump table (list of dword code label addresses, indexed by token value)

extern mAbs
extern mAnd
extern mByteFetch
extern mByteStore
extern mCall
extern mClearReturn
extern mClearStack
extern mDiv
extern mDivMod
extern mDrop
extern mDup
extern mEqual
extern mFetch
extern mFourPlus
extern mGreater
extern mGreaterEq
extern mI
extern mI16
extern mI32
extern mI8
extern mInvert
extern mJump
extern mLess
extern mLessEq
extern mMax
extern mMin
extern mMinus
extern mMod
extern mMul
extern mNegate
extern mNop
extern mNotEq
extern mOneMinus
extern mOnePlus
extern mOr
extern mOver
extern mPlus
extern mPopW
extern mReturn
extern mRFrom
extern mRPopW
extern mStore
extern mSwap
extern mToR
extern mTwoPlus
extern mU16
extern mU8
extern mWordFetch
extern mWordStore
extern mXor
extern mZeroEqual
extern mZeroLess
extern mIf
extern mElse
extern mEndIf
extern mFor
extern mNext
extern mParen
extern mColon
extern mSemiColon
extern mCreate
extern mAllot
extern mHere
extern mLast
extern mTick
extern mEmit
extern mCR
extern mSpace
extern mDotQuoteI
extern mDotQuoteC
extern mDot
extern mHex
extern mDecimal
extern mDotS
extern mDotRet
extern mDumpVars
extern mBye

align 16, db 0
db "== Jump Table =="

align 16, db 0
JumpTable:
dd mAbs         ;  0
dd mAnd         ;  1
dd mByteFetch   ;  2
dd mByteStore   ;  3
dd mCall        ;  4
dd mClearReturn  ;  5
dd mClearStack  ;  6
dd mDiv         ;  7
dd mDivMod      ;  8
dd mDrop        ;  9
dd mDup         ; 10
dd mEqual       ; 11
dd mFetch       ; 12
dd mFourPlus    ; 13
dd mGreater     ; 14
dd mGreaterEq   ; 15
dd mI           ; 16
dd mI16         ; 17
dd mI32         ; 18
dd mI8          ; 19
dd mInvert      ; 20
dd mJump        ; 21
dd mLess        ; 22
dd mLessEq      ; 23
dd mMax         ; 24
dd mMin         ; 25
dd mMinus       ; 26
dd mMod         ; 27
dd mMul         ; 28
dd mNegate      ; 29
dd mNop         ; 30
dd mNotEq       ; 31
dd mOneMinus    ; 32
dd mOnePlus     ; 33
dd mOr          ; 34
dd mOver        ; 35
dd mPlus        ; 36
dd mPopW        ; 37
dd mReturn      ; 38
dd mRFrom       ; 39
dd mRPopW       ; 40
dd mStore       ; 41
dd mSwap        ; 42
dd mToR         ; 43
dd mTwoPlus     ; 44
dd mU16         ; 45
dd mU8          ; 46
dd mWordFetch   ; 47
dd mWordStore   ; 48
dd mXor         ; 49
dd mZeroEqual   ; 50
dd mZeroLess    ; 51
dd mIf          ; 52
dd mElse        ; 53
dd mEndIf       ; 54
dd mFor         ; 55
dd mNext        ; 56
dd mParen       ; 57
dd mColon       ; 58
dd mSemiColon   ; 59
dd mCreate      ; 60
dd mAllot       ; 61
dd mHere        ; 62
dd mLast        ; 63
dd mTick        ; 64
dd mEmit        ; 65
dd mCR          ; 66
dd mSpace       ; 67
dd mDotQuoteI   ; 68
dd mDotQuoteC   ; 69
dd mDot         ; 70
dd mHex         ; 71
dd mDecimal     ; 72
dd mDotS        ; 73
dd mDotRet      ; 74
dd mDumpVars    ; 75
dd mBye         ; 76

%define JumpTableLen 77


;-------------------------------------------------------------
; Core vocabulary linked lists
;
; Vocabulary linked list format:
;  dw link to previous item (zero indexed, *not* section indexed)
;  db length of name, <name-bytes>, token
;
; Voc0 is meant to be copied at runtime into the core dictionary
; area of markabForth's 64KB virtual RAM memory map
;

align 16, db 0
db "== Dictionary =="

align 16, db 0
Voc0: dd 0         ; This padding is so second item's link will be non-zero
align 16, db 0
dw 0
db 5, "tpvar", TpConst
dd 3
dw 16
db 7, "tpconst", TpConst
dd 2
dw 29
db 6, "tpcode", TpConst
dd 1
dw 44
db 7, "tptoken", TpConst
dd 0
dw 58
db 3, "abs", TpToken, tAbs, 0
dw 73
db 3, "and", TpToken, tAnd, 0
dw 82
db 2, "b@", TpToken, tByteFetch, 0
dw 91
db 2, "b!", TpToken, tByteStore, 0
dw 99
db 11, "clearreturn", TpToken, tClearReturn, 0
dw 107
db 10, "clearstack", TpToken, tClearStack, 0
dw 124
db 1, "/", TpToken, tDiv, 0
dw 140
db 4, "/mod", TpToken, tDivMod, 0
dw 147
db 4, "drop", TpToken, tDrop, 0
dw 157
db 3, "dup", TpToken, tDup, 0
dw 167
db 1, "=", TpToken, tEqual, 0
dw 176
db 1, "@", TpToken, tFetch, 0
dw 183
db 2, "4+", TpToken, tFourPlus, 0
dw 190
db 1, ">", TpToken, tGreater, 0
dw 198
db 2, ">=", TpToken, tGreaterEq, 0
dw 205
db 1, "i", TpToken, tI, 0
dw 213
db 6, "invert", TpToken, tInvert, 0
dw 220
db 1, "<", TpToken, tLess, 0
dw 232
db 2, "<=", TpToken, tLessEq, 0
dw 239
db 3, "max", TpToken, tMax, 0
dw 247
db 3, "min", TpToken, tMin, 0
dw 256
db 1, "-", TpToken, tMinus, 0
dw 265
db 3, "mod", TpToken, tMod, 0
dw 272
db 1, "*", TpToken, tMul, 0
dw 281
db 6, "negate", TpToken, tNegate, 0
dw 288
db 3, "nop", TpToken, tNop, 0
dw 300
db 2, "<>", TpToken, tNotEq, 0
dw 309
db 2, "1-", TpToken, tOneMinus, 0
dw 317
db 2, "1+", TpToken, tOnePlus, 0
dw 325
db 2, "or", TpToken, tOr, 0
dw 333
db 4, "over", TpToken, tOver, 0
dw 341
db 1, "+", TpToken, tPlus, 0
dw 351
db 2, "r>", TpToken, tRFrom, 0
dw 358
db 1, "!", TpToken, tStore, 0
dw 366
db 4, "swap", TpToken, tSwap, 0
dw 373
db 2, ">r", TpToken, tToR, 0
dw 383
db 2, "2+", TpToken, tTwoPlus, 0
dw 391
db 2, "w@", TpToken, tWordFetch, 0
dw 399
db 2, "w!", TpToken, tWordStore, 0
dw 407
db 3, "xor", TpToken, tXor, 0
dw 415
db 2, "0<", TpToken, tZeroLess, 0
dw 424
db 2, "0=", TpToken, tZeroEqual, 0
dw 432
db 2, "if", TpToken, tIf, -1
dw 440
db 4, "else", TpToken, tElse, -1
dw 448
db 5, "endif", TpToken, tEndIf, -1
dw 458
db 3, "for", TpToken, tFor, -1
dw 469
db 4, "next", TpToken, tNext, -1
dw 478
db 1, "(", TpToken, tParen, -1
dw 488
db 1, ":", TpToken, tColon, -1
dw 495
db 1, ";", TpToken, tSemiColon, -1
dw 502
db 6, "create", TpToken, tCreate, 0
dw 509
db 5, "allot", TpToken, tAllot, 0
dw 521
db 4, "here", TpToken, tHere, 0
dw 532
db 4, "last", TpToken, tLast, 0
dw 542
db 1, "'", TpToken, tTick, -1
dw 552
db 4, "emit", TpToken, tEmit, 0
dw 559
db 2, "cr", TpToken, tCR, 0
dw 569
db 5, "space", TpToken, tSpace, 0
dw 577
db 2, '."', TpToken, tDotQuoteI, -1
dw 588
db 1, ".", TpToken, tDot, 0
dw 596
db 3, "hex", TpToken, tHex, 0
dw 603
db 7, "decimal", TpToken, tDecimal, 0
dw 612
db 2, ".s", TpToken, tDotS, 0
dw 625
db 4, ".ret", TpToken, tDotRet, 0
dw 633
db 5, ".vars", TpToken, tDumpVars, 0
dw 643
db 3, "bye", TpToken, tBye, 0
Voc0End: db 0
align 16, db 0
Voc0Len: dd Voc0End - Voc0  ; 663
Voc0Head: dd 654