( Copyright Â© 2022 Sam Blenny)
( SPDX-License-Identifier: MIT)
( === THIS FILE IS AUTOMATICALLY GENERATED ===)
( ===        DO NOT MAKE EDITS HERE        ===)
( ===      See codegen.py for details      ===)

( Enum codes)
0 const T_VAR
1 const T_CONST
2 const T_OP
3 const T_OBJ
4 const T_IMM
0 const MODE_INT
1 const MODE_COM
2 const MODE_IMM


( CPU opcodes)
20 const JMP
21 const JAL
23 const RET
24 const BZ
25 const DRBLT
27 const MTR
31 const RDROP
36 const U8
37 const U16
38 const I32

( Core word definitions)
 0 opcode nop
 1 opcode +
 2 opcode -
 3 opcode 1+
 4 opcode 1-
 5 opcode *
 6 opcode and
 7 opcode inv
 8 opcode or
 9 opcode xor
10 opcode <<
11 opcode >>
12 opcode >>>
13 opcode =
14 opcode >
15 opcode <
16 opcode !=
17 opcode 0=
18 opcode true
19 opcode false
22 opcode call
26 opcode r>
27 opcode >r
28 opcode r
29 opcode pc
30 opcode err
31 opcode rdrop
32 opcode drop
33 opcode dup
34 opcode over
35 opcode swap
39 opcode @
40 opcode !
41 opcode h@
42 opcode h!
43 opcode w@
44 opcode w!
45 opcode reset
46 opcode fence
47 opcode clerr
48 opcode iod
49 opcode ior
50 opcode iodh
51 opcode iorh
52 opcode key
53 opcode emit
54 opcode >a
55 opcode @a
56 opcode @a+
57 opcode a+
58 opcode a-
59 opcode a
60 opcode >b
61 opcode @b
62 opcode @b+
63 opcode !b+
64 opcode b+
65 opcode b-
66 opcode b
67 opcode >x
68 opcode x
69 opcode >y
70 opcode y

( Memory map)
( 0000..00FF belongs to VM)
( 0100..FFFF belongs to kernel)
hex
0000 const Heap
E000 const HeapRes
E0FF const HeapMax
E100 const DP
E104 const IN
E108 const CONTEXT
E10C const CURRENT
E110 const MODE
E118 const LASTCALL
E11C const NEST
E120 const BASE
E200 const IB
E300 const Pad
E400 const Fmt
FFFF const MemMax
decimal
