( Copyright Â© 2022 Sam Blenny)
( SPDX-License-Identifier: MIT)
( === THIS FILE IS AUTOMATICALLY GENERATED ===)
( ===        DO NOT MAKE EDITS HERE        ===)
( ===      See codegen.py for details      ===)

( Enum codes)
0 const T_VAR
1 const T_CONST
2 const T_OP
3 const T_OBJ
4 const T_IMM
0 const MODE_INT
1 const MODE_COM
2 const MODE_IMM


( CPU opcodes)
 0 const NOP
 1 const ADD
 2 const SUB
 3 const INC
 4 const DEC
 5 const MUL
 6 const AND
 7 const INV
 8 const OR
 9 const XOR
10 const SLL
11 const SRL
12 const SRA
13 const EQ
14 const GT
15 const LT
16 const NE
17 const ZE
18 const TRUE
19 const FALSE
20 const JMP
21 const JAL
22 const RET
23 const BZ
24 const DRBLT
25 const MRT
26 const MTR
27 const R
28 const PC
29 const RDROP
30 const DROP
31 const DUP
32 const OVER
33 const SWAP
34 const U8
35 const U16
36 const I32
37 const LB
38 const SB
39 const LH
40 const SH
41 const LW
42 const SW
43 const RESET
44 const IOD
45 const IOR
46 const IODH
47 const IORH
48 const IOKEY
49 const IOEMIT
50 const MTA
51 const LBA
52 const LBAI
53 const AINC
54 const ADEC
55 const A
56 const MTB
57 const LBB
58 const LBBI
59 const SBBI
60 const BINC
61 const BDEC
62 const B
63 const MTX
64 const X
65 const MTY
66 const Y

( Core word definitions)
 0 opcode nop
 1 opcode +
 2 opcode -
 3 opcode 1+
 4 opcode 1-
 5 opcode *
 6 opcode and
 7 opcode inv
 8 opcode or
 9 opcode xor
10 opcode <<
11 opcode >>
12 opcode >>>
13 opcode =
14 opcode >
15 opcode <
16 opcode !=
17 opcode 0=
18 opcode true
19 opcode false
25 opcode r>
26 opcode >r
27 opcode r
28 opcode pc
29 opcode rdrop
30 opcode drop
31 opcode dup
32 opcode over
33 opcode swap
37 opcode @
38 opcode !
39 opcode h@
40 opcode h!
41 opcode w@
42 opcode w!
44 opcode iod
45 opcode ior
46 opcode iodh
47 opcode iorh
48 opcode key
49 opcode emit
50 opcode >a
51 opcode @a
52 opcode @a+
53 opcode a+
54 opcode a-
55 opcode a
56 opcode >b
57 opcode @b
58 opcode @b+
59 opcode !b+
60 opcode b+
61 opcode b-
62 opcode b
63 opcode >x
64 opcode x
65 opcode >y
66 opcode y

( Memory map)
( 0000..00FF belongs to VM)
( 0100..FFFF belongs to kernel)
hex
0000 const Boot
02FF const BootMax
0300 const CORE_V
0304 const FENCE
0400 const Heap
E000 const HeapRes
E0FF const HeapMax
E100 const DP
E104 const IN
E108 const CONTEXT
E10C const CURRENT
E110 const MODE
E114 const EXT_V
E118 const LASTCALL
E11C const NEST
E200 const IBLen
E201 const IB
E300 const PadLen
E301 const Pad
E400 const FmtLen
E401 const Fmt
FFFF const MemMax
decimal
