( Copyright Â© 2022 Sam Blenny)
( SPDX-License-Identifier: MIT)
( === THIS FILE IS AUTOMATICALLY GENERATED ===)
( ===        DO NOT MAKE EDITS HERE        ===)
( ===      See codegen.py for details      ===)

( Enum codes)
0 const T_VAR
1 const T_CONST
2 const T_OP
3 const T_OBJ
4 const T_IMM
0 const MODE_INT
1 const MODE_COM
2 const MODE_IMM


( CPU opcodes)
 0 const NOP
 1 const ADD
 2 const SUB
 3 const INC
 4 const DEC
 5 const MUL
 6 const AND
 7 const INV
 8 const OR
 9 const XOR
10 const SLL
11 const SRL
12 const SRA
13 const EQ
14 const GT
15 const LT
16 const NE
17 const ZE
18 const TRUE
19 const FALSE
20 const JMP
21 const JAL
22 const CALL
23 const RET
24 const BZ
25 const DRBLT
26 const MRT
27 const MTR
28 const R
29 const PC
30 const RDROP
31 const DROP
32 const DUP
33 const OVER
34 const SWAP
35 const U8
36 const U16
37 const I32
38 const LB
39 const SB
40 const LH
41 const SH
42 const LW
43 const SW
44 const RESET
45 const IOD
46 const IOR
47 const IODH
48 const IORH
49 const IOKEY
50 const IOEMIT
51 const MTA
52 const LBA
53 const LBAI
54 const AINC
55 const ADEC
56 const A
57 const MTB
58 const LBB
59 const LBBI
60 const SBBI
61 const BINC
62 const BDEC
63 const B
64 const MTX
65 const X
66 const MTY
67 const Y

( Core word definitions)
 0 opcode nop
 1 opcode +
 2 opcode -
 3 opcode 1+
 4 opcode 1-
 5 opcode *
 6 opcode and
 7 opcode inv
 8 opcode or
 9 opcode xor
10 opcode <<
11 opcode >>
12 opcode >>>
13 opcode =
14 opcode >
15 opcode <
16 opcode !=
17 opcode 0=
18 opcode true
19 opcode false
22 opcode call
26 opcode r>
27 opcode >r
28 opcode r
29 opcode pc
30 opcode rdrop
31 opcode drop
32 opcode dup
33 opcode over
34 opcode swap
38 opcode @
39 opcode !
40 opcode h@
41 opcode h!
42 opcode w@
43 opcode w!
45 opcode iod
46 opcode ior
47 opcode iodh
48 opcode iorh
49 opcode key
50 opcode emit
51 opcode >a
52 opcode @a
53 opcode @a+
54 opcode a+
55 opcode a-
56 opcode a
57 opcode >b
58 opcode @b
59 opcode @b+
60 opcode !b+
61 opcode b+
62 opcode b-
63 opcode b
64 opcode >x
65 opcode x
66 opcode >y
67 opcode y

( Memory map)
( 0000..00FF belongs to VM)
( 0100..FFFF belongs to kernel)
hex
0000 const Boot
02FF const BootMax
0300 const CORE_V
0304 const FENCE
0400 const Heap
E000 const HeapRes
E0FF const HeapMax
E100 const DP
E104 const IN
E108 const CONTEXT
E10C const CURRENT
E110 const MODE
E114 const EXT_V
E118 const LASTCALL
E11C const NEST
E200 const IBLen
E201 const IB
E300 const PadLen
E301 const Pad
E400 const FmtLen
E401 const Fmt
FFFF const MemMax
decimal
