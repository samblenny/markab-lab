#!/usr/bin/python3
# Copyright (c) 2022 Sam Blenny
# SPDX-License-Identifier: MIT
#

from markab_vm import VMTask

def p(s):
  print(s, end='')

def test_push_pop():
  v = VMTask()
  print("=== test.vm.test_push_pop() ===")
  p(".s")
  v._dotS()
  for i in range(19):
    p(f"{i} ")
    v.push(i)
    p(".s")
    v._dotS()
  for i in range(19):
    p("drop .s")
    v.drop()
    v._dotS()
  print()

def test_plus_minus():
  v = VMTask()
  print("=== test.vm.test_plus_minus() ===")
  p("-5 1 2 .s      (  -6 1 2  OK)")
  v.push(-6)
  v.push(1)
  v.push(2)
  v._dotS()
  p("+ .s             (  -6 3  OK)")
  v.plus()
  v._dotS()
  p("+ .s               (  -3  OK)")
  v.plus()
  v._dotS()
  p("drop 7 9 .s       (  7 9  OK)")
  v.drop()
  v.push(7)
  v.push(9)
  v._dotS()
  p("- .s               (  -2  OK)")
  v.minus()
  v._dotS()
  print()

def test_multiply():
  v = VMTask()
  print("=== test.vm.test_multiply() ===")
  p("3 -1 .s                         (  3 -1  OK)")
  v.push(3)
  v.push(-1)
  v._dotS()
  p("* .s drop                         (  -3  OK)")
  v.mul()
  v._dotS()
  v.drop()
  p("-2 hex .s decimal            ( fffffffe  OK)")
  v.push(-2)
  v._hex()
  v._dotS()
  v._decimal()
  p("dup * .s drop                      (  4  OK)")
  v.dup()
  v.mul()
  v._dotS()
  v.drop()
  p("hex 7fffffff decimal .s   (  2147483647  OK)")
  v.push(0x7fffffff)
  v._dotS()
  p("dup * .s                           (  1  OK)")
  v.dup()
  v.mul()
  v._dotS()
  print()

def test_shift():
  v = VMTask()
  print("=== test.vm.test_shift() ===")
  p("1 31 .s                   (  1 31  OK)")
  v.push(1)
  v.push(31)
  v._dotS()
  p("<< .s              (  -2147483648  OK)")
  v.shiftLeft()
  v._dotS()
  p("hex .s decimal        (  80000000  OK)")
  v._hex()
  v._dotS()
  v._decimal()
  p("31 >>> decimal .s           (  -1  OK)")
  v.push(31)
  v.shiftRightI32()
  v._decimal()
  v._dotS()
  p("hex .s                (  ffffffff  OK)")
  v._hex()
  v._dotS()
  p("1 >> .s decimal       (  7fffffff  OK)")
  v.push(1)
  v.shiftRightU32()
  v._dotS()
  v._decimal()
  p("decimal .s          (  2147483647  OK)")
  v._decimal()
  v._dotS()
  p("30 >> .s                      ( 1  OK)")
  v.push(30)
  v.shiftRightU32()
  v._dotS()
  p("4 << .s                     (  16  OK)")
  v.push(4)
  v.shiftLeft()
  v._dotS()
  p("2 >> .s                      (  4  OK)")
  v.push(2)
  v.shiftRightU32()
  v._dotS()
  print()


def test_bitwise():
  v = VMTask()
  print("=== test.vm.test_bitwise() ===")
  print("hex")
  v._hex()
  p("ffffffff 3333 & .s drop       (  3333  OK)")
  v.push(0xffffffff)
  v.push(0x3333)
  v.and_()
  v._dotS()
  v.drop()
  p("55555555 aaaa | .s drop   (  5555ffff  OK)")
  v.push(0x55555555)
  v.push(0xaaaa)
  v.or_()
  v._dotS()
  v.drop()
  p("55555555 ffff ^ .s drop   (  5555aaaa  OK)")
  v.push(0x55555555)
  v.push(0xffff)
  v.xor()
  v._dotS()
  v.drop()
  p("55555555 ~ .s drop        (  aaaaaaaa  OK)")
  v.push(0x55555555)
  v.invert()
  v._dotS()
  v.drop()
  print("decimal")
  v._decimal()
  print()

test_push_pop()
test_plus_minus()
test_multiply()
test_shift()
test_bitwise()
